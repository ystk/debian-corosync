.\"/*
.\" * Copyright (c) 2010 Red Hat, Inc.
.\" *
.\" * All rights reserved.
.\" *
.\" * Author: Jan Friesse (jfriesse@redhat.com)
.\" *
.\" * This software licensed under BSD license, the text of which follows:
.\" *
.\" * Redistribution and use in source and binary forms, with or without
.\" * modification, are permitted provided that the following conditions are met:
.\" *
.\" * - Redistributions of source code must retain the above copyright notice,
.\" *   this list of conditions and the following disclaimer.
.\" * - Redistributions in binary form must reproduce the above copyright notice,
.\" *   this list of conditions and the following disclaimer in the documentation
.\" *   and/or other materials provided with the distribution.
.\" * - Neither the name of the Red Hat, Inc. nor the names of its
.\" *   contributors may be used to endorse or promote products derived from this
.\" *   software without specific prior written permission.
.\" *
.\" * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
.\" * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" * THE POSSIBILITY OF SUCH DAMAGE.
.\" */
.TH "SAM_DATA_RESTORE" 3 "04/15/2010" "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"

.SH NAME
.P
sam_data_restore \- Restore previously saved user data

.SH SYNOPSIS
.P
\fB#include <corosync/sam.h>\fR

.P
\fBcs_error_t sam_data_restore (void *\fIdata\fB, size_t \fIsize\fB);\fR

.SH DESCRIPTION
.P
The \fBsam_data_restore\fR function is used to restore data, previously
saved by calling \fBsam_data_store(3)\fR. Such data survives between instances.

.P
The \fIdata\fR parameter is pointer to memory initialized by caller. Stored data
are copied there. This also means, that caller is responsible for freeing memory.

.P
The \fIsize\fR parameter is length of \fIdata\fR. This one must be at least same
length as previously stored data otherwise error is returned. Parameter can
be larger but only stored data size bytes are changed.

Use \fBsam_data_getsize(3)\fR to find out length of stored data.

.SH RETURN VALUE
.P
This call return CS_OK value if successful, otherwise and error is returned.

.SH ERRORS
.TP
CS_ERR_BAD_HANDLE
component was not initialized by calling \fBsam_initialize(3)\fR or it was finalized.
.TP
CS_ERR_INVALID_PARAM
data parameter is NULL or size is less then currently stored data length

.SH "SEE ALSO"
.BR sam_data_getsize (3),
.BR sam_data_store (3)
