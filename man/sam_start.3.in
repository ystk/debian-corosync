.\"/*
.\" * Copyright (c) 2009-2010 Red Hat, Inc.
.\" *
.\" * All rights reserved.
.\" *
.\" * Author: Jan Friesse (jfriesse@redhat.com)
.\" *
.\" * This software licensed under BSD license, the text of which follows:
.\" *
.\" * Redistribution and use in source and binary forms, with or without
.\" * modification, are permitted provided that the following conditions are met:
.\" *
.\" * - Redistributions of source code must retain the above copyright notice,
.\" *   this list of conditions and the following disclaimer.
.\" * - Redistributions in binary form must reproduce the above copyright notice,
.\" *   this list of conditions and the following disclaimer in the documentation
.\" *   and/or other materials provided with the distribution.
.\" * - Neither the name of the Red Hat, Inc. nor the names of its
.\" *   contributors may be used to endorse or promote products derived from this
.\" *   software without specific prior written permission.
.\" *
.\" * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
.\" * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" * THE POSSIBILITY OF SUCH DAMAGE.
.\" */
.TH "SAM_START" 3 "30/04/2010" "corosync Man Page" "Corosync Cluster Engine Programmer's Manual"

.SH NAME
.P
sam_start \- Start health checking

.SH SYNOPSIS
.P
\fB#include <corosync/sam.h>\fR

.P
\fBcs_error_t sam_start (void);\fR

.SH DESCRIPTION
.P
The \fBsam_start\fR function is used to start health checking of application.
After calling this function, the active process needs to send healthchecks
within the registered time interval by calling \fBsam_hc_send(3)\fR.  If
event driven healthchecking is configured by calling \fBsam_register(3)\fR,
an internal thread will be created and send health check confirmations four
times per \fItime_interval\fR.

.P
Application must be registered by calling \fBsam_register(3)\fR before this
function can be called.

.P
An application can always stop health checking by calling the \fBsam_stop(3)\fR
function.

.P
If SAM is initialized with quorum policy \fISAM_RECOVERY_POLICY_QUIT\fR or
\fISAM_RECOVERY_POLICY_RESTART\fR \fBsam_start\fR will block until corosync
becomes quorate.

.SH RETURN VALUE
.P
This call return CS_OK value if successful, otherwise and error is returned. If
SAM is initialized with quorum policy, returned error can also be quorum error.

.SH ERRORS
.TP
CS_ERR_BAD_HANDLE
component was not registered by calling \fBsam_register(3)\fR function.

.SH "SEE ALSO"
.BR sam_hc_send (3),
.BR sam_stop (3),
.BR sam_register (3),
.BR sam_hc_callback_register (3)
