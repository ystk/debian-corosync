From: =?utf-8?q?Ferenc_W=C3=A1gner?= <wferi@niif.hu>
Date: Thu, 13 Aug 2015 01:20:28 +0200
Subject: Send corosync startup notification to systemd
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

This enables starting the daemon directly in the service file, because
dependent units won't be started until initialization is complete.

Signed-off-by: Ferenc WÃ¡gner <wferi@niif.hu>
---
 configure.ac             | 2 ++
 exec/Makefile.am         | 4 ++--
 exec/main.c              | 8 ++++++++
 init/corosync.service.in | 7 ++++---
 4 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/configure.ac b/configure.ac
index 131f12d..c324c1a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -475,6 +475,8 @@ if test "x${enable_augeas}" = xyes; then
 	PACKAGE_FEATURES="$PACKAGE_FEATURES augeas"
 fi
 if test "x${enable_systemd}" = xyes; then
+	PKG_CHECK_MODULES([libsystemd], [libsystemd])
+	AC_DEFINE([HAVE_LIBSYSTEMD], [1], [have systemd interface library])
 	PACKAGE_FEATURES="$PACKAGE_FEATURES systemd"
 	WITH_LIST="$WITH_LIST --with systemd"
 fi
diff --git a/exec/Makefile.am b/exec/Makefile.am
index 9ca7720..bc3a190 100644
--- a/exec/Makefile.am
+++ b/exec/Makefile.am
@@ -71,10 +71,10 @@ endif
 
 corosync_CPPFLAGS	= -DLOGCONFIG_USE_ICMAP=1
 
-corosync_CFLAGS         = $(statgrab_CFLAGS)
+corosync_CFLAGS         = $(statgrab_CFLAGS) $(libsystemd_CFLAGS)
 
 corosync_LDADD		= libtotem_pg.la ../common_lib/libcorosync_common.la \
-			  $(LIBQB_LIBS) $(statgrab_LIBS)
+			  $(LIBQB_LIBS) $(statgrab_LIBS) $(libsystemd_LIBS)
 
 corosync_DEPENDENCIES	= libtotem_pg.la ../common_lib/libcorosync_common.la
 
diff --git a/exec/main.c b/exec/main.c
index 7d2dcf7..457ed09 100644
--- a/exec/main.c
+++ b/exec/main.c
@@ -96,6 +96,10 @@
 #include <semaphore.h>
 #include <string.h>
 
+#ifdef HAVE_LIBSYSTEMD
+#include <systemd/sd-daemon.h>
+#endif
+
 #include <qb/qbdefs.h>
 #include <qb/qblog.h>
 #include <qb/qbloop.h>
@@ -312,6 +316,10 @@ static void corosync_sync_completed (void)
 	 * Inform totem to start using new message queue again
 	 */
 	totempg_trans_ack();
+
+#ifdef HAVE_LIBSYSTEMD
+	sd_notify (0, "READY=1");
+#endif
 }
 
 static int corosync_sync_callbacks_retrieve (
diff --git a/init/corosync.service.in b/init/corosync.service.in
index d71a857..4f63b41 100644
--- a/init/corosync.service.in
+++ b/init/corosync.service.in
@@ -5,9 +5,10 @@ Requires=network-online.target
 After=network-online.target
 
 [Service]
-ExecStart=@INITWRAPPERSDIR@/corosync start
-ExecStop=@INITWRAPPERSDIR@/corosync stop
-Type=forking
+EnvironmentFile=-@SYSCONFDIR@/sysconfig/corosync
+EnvironmentFile=-@SYSCONFDIR@/default/corosync
+ExecStart=@SBINDIR@/corosync -f $OPTIONS
+Type=notify
 
 # The following config is for corosync with enabled watchdog service.
 #
