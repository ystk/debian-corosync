From: Jan Friesse <jfriesse@redhat.com>
Date: Fri, 23 Mar 2018 16:47:42 +0100
Subject: totemudp: Check lenght of message to sent

If message to sent is too long, encrypt and authentificate may overwrite
stack (buf_out). Check this condition and throw message if this happens.

Signed-off-by: Jan Friesse <jfriesse@redhat.com>
Reviewed-by: Christine Caulfield <ccaulfie@redhat.com>
---
 exec/totemcrypto.c |  8 +++++++-
 exec/totemcrypto.h |  3 +++
 exec/totemudp.c    | 12 ++++++++++++
 exec/totemudpu.c   | 12 ++++++++++++
 4 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/exec/totemcrypto.c b/exec/totemcrypto.c
index bf30ffc..122f15f 100644
--- a/exec/totemcrypto.c
+++ b/exec/totemcrypto.c
@@ -699,6 +699,13 @@ size_t crypto_sec_header_size(
 	return hdr_size;
 }
 
+size_t crypto_get_current_sec_header_size(
+	const struct crypto_instance *instance)
+{
+
+	return (instance->crypto_header_size);
+}
+
 /*
  * 2.0 packet format:
  *   crypto_cipher_type | crypto_hash_type | __pad0 | __pad1 | hash | salt | data
@@ -780,7 +787,6 @@ int crypto_authenticate_and_decrypt (struct crypto_instance *instance,
 	/*
 	 * decrypt
 	 */
-
 	if (decrypt_nss_2_3(instance, buf, buf_len) != 0) {
 		return -1;
 	}
diff --git a/exec/totemcrypto.h b/exec/totemcrypto.h
index 7c06c39..b694105 100644
--- a/exec/totemcrypto.h
+++ b/exec/totemcrypto.h
@@ -44,6 +44,9 @@ extern size_t crypto_sec_header_size(
 	const char *crypto_cipher_type,
 	const char *crypto_hash_type);
 
+extern size_t crypto_get_current_sec_header_size(
+	const struct crypto_instance *instance);
+
 extern int crypto_authenticate_and_decrypt (
 	struct crypto_instance *instance,
 	unsigned char *buf,
diff --git a/exec/totemudp.c b/exec/totemudp.c
index 31d0570..dbc6ee9 100644
--- a/exec/totemudp.c
+++ b/exec/totemudp.c
@@ -270,6 +270,12 @@ static inline void ucast_sendmsg (
 	struct iovec iovec;
 	int addrlen;
 
+	if (msg_len + crypto_get_current_sec_header_size(instance->crypto_inst) > sizeof(buf_out)) {
+		log_printf(LOGSYS_LEVEL_CRIT, "UDP message for ucast is too big. Ignoring message");
+
+		return ;
+	}
+
 	/*
 	 * Encrypt and digest the message
 	 */
@@ -338,6 +344,12 @@ static inline void mcast_sendmsg (
 	struct sockaddr_storage sockaddr;
 	int addrlen;
 
+	if (msg_len + crypto_get_current_sec_header_size(instance->crypto_inst) > sizeof(buf_out)) {
+		log_printf(LOGSYS_LEVEL_CRIT, "UDP message for mcast is too big. Ignoring message");
+
+		return ;
+	}
+
 	/*
 	 * Encrypt and digest the message
 	 */
diff --git a/exec/totemudpu.c b/exec/totemudpu.c
index 037f82b..78005c4 100644
--- a/exec/totemudpu.c
+++ b/exec/totemudpu.c
@@ -271,6 +271,12 @@ static inline void ucast_sendmsg (
 	struct iovec iovec;
 	int addrlen;
 
+	if (msg_len + crypto_get_current_sec_header_size(instance->crypto_inst) > sizeof(buf_out)) {
+		log_printf(LOGSYS_LEVEL_CRIT, "UDPU message for ucast is too big. Ignoring message");
+
+		return ;
+	}
+
 	/*
 	 * Encrypt and digest the message
 	 */
@@ -341,6 +347,12 @@ static inline void mcast_sendmsg (
         struct list_head *list;
 	struct totemudpu_member *member;
 
+	if (msg_len + crypto_get_current_sec_header_size(instance->crypto_inst) > sizeof(buf_out)) {
+		log_printf(LOGSYS_LEVEL_CRIT, "UDPU message for mcast is too big. Ignoring message");
+
+		return ;
+	}
+
 	/*
 	 * Encrypt and digest the message
 	 */
